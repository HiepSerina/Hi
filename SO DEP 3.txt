#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <stdbool.h>
#define f(i,x,y) for(int i=x; i<=y; ++i)
#define fn(i,x,y) for(int i=x; i>=y; --i)
/*
bool snt(int  n){
    if(n<2) {return false;}
    int i;
    for (int i=2; i<=sqrt(n); ++i)
    {
        if(n%i==0){return false;}
    }
    return true;
}

int max(int a, int b)
{
    return (a>b) ? a:b;
}
int min(int a, int b)
{
    return (a<b) ? a:b;
}

int giaithua(int a)
{
    if(a==1) return 1;
    else  return a*giaithua(a-1);
}
long long GCD(long long  a, long long b) {
    if (b == 0) return a;
    return GCD(b, a % b);
}
long long LCM(long long a, long long b) {
    return (a * b) / GCD(a, b);
}

long long fbc(long long  n)
{
    long long a1 = 1, a2 = 1;
    if (n == 1 || n == 2)
        return 1;
    long long i = 3, a;
    while (i <= n)
    {
        a = a1 + a2;
        a1 = a2;
        a2 = a;
        i++;
    }
    return a;
}

void SORT(int a[], int n){
    int tg;
    for(int i=1; i<= n; i++){
        for(int j=i+1; j <= n; j++){
            if(a[i] > a[j]){
                tg = a[i];
                a[i] = a[j];
                a[j] = tg;
            }
        }
    }
}
*/
bool sodep3( int n)
{
        int a[100], b=0 ,s=0, t=0 , c=0,k=0, x=0;
        while(n!=0){
           a[++c]=n%10;
           n/=10;
            }
            f(i,1,c){
                if(a[i]==a[c-i+1]) k++;
                if(a[i]==6) x++;
                s+=a[i];
            }
            if(k==c && x>0 && s%10==8) return true;

    return false;
}
int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    if(n<=m)
    f(i,n,m){
        if(sodep3(i)==true) printf("%d ",i);
    }
    else {
        f(i,m,n){
        if(sodep3(i)==true) printf("%d ",i);
    }
    }
}