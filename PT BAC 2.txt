#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define f(i,x,y) for(int i=x; i<=y; ++i)
#define fn(i,x,y) for(int i=x; i>=y; --i)

int snt(int n){
    if(n<2) {return 0;}
    int i;
    for (int i=2; i<=sqrt(n); ++i)
    {
        if(n%i==0){return 0;}
    }
    return n;
}

int max(int a, int b)
{
    return (a>b) ? a:b;
}
int min(int a, int b)
{
    return (a<b) ? a:b;
}

long long giaithua(long long a)
{
    if(a==1) return 1;
    else  return a*giaithua(a-1);
}
long long GCD(long long a, long long b) {
    if (b == 0) return a;
    return GCD(b, a % b);
}
long long LCM(long long a, long long b) {
    return (a * b) / GCD(a, b);
}

int fbc(int  n)
{
    int a1 = 1, a2 = 1;
    if (n == 1 || n == 2)
        return 1;
    int i = 3, a;
    while (i <= n)
    {
        a = a1 + a2;
        a1 = a2;
        a2 = a;
        i++;
    }
    return a;
}


int main()
{
        float a,b,c,d;
    scanf("%f%f%f",&a,&b,&c);
    if(a==0)
    {
        if(b==0)
            {
                if(c!=0)
                    printf("NO");
            }
        else
            printf("%0.2f",-c/b);
    }
    else
    {
        d=b*b-4*a*c;
        if (d<0)
            printf("NO");
        else if (d==0)
            printf("%0.2f",-b/(2*a));
        else
            printf("%0.2f %0.2f",(-b+sqrt(d))/(2*a),(-b-sqrt(d))/(2*a));
    }




    return 0;
}